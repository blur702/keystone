# Staging environment configuration for pw.kevinalthaus.com
# Comprehensive Nginx configuration with security headers and optimizations

upstream staging_backend {
    least_conn;
    server 127.0.0.1:4000 max_fails=3 fail_timeout=30s;
    server 127.0.0.1:4001 backup;
    keepalive 32;
}

upstream staging_frontend {
    server 127.0.0.1:4174;
    keepalive 16;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=staging_api:10m rate=30r/s;
limit_req_zone $binary_remote_addr zone=staging_auth:5m rate=5r/m;
limit_req_zone $binary_remote_addr zone=staging_general:10m rate=100r/s;
limit_conn_zone $binary_remote_addr zone=staging_conn:10m;

# Cache zones
proxy_cache_path /var/cache/nginx/staging levels=1:2 keys_zone=staging_cache:10m max_size=100m inactive=60m use_temp_path=off;

# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name pw.kevinalthaus.com;
    
    # ACME challenge for Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name pw.kevinalthaus.com;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/pw.kevinalthaus.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/pw.kevinalthaus.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/pw.kevinalthaus.com/chain.pem;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL_STAGING:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "accelerometer=(), camera=(), geolocation=(self), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()" always;
    
    # CSP for staging (more permissive for testing)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' data: https://fonts.gstatic.com; img-src 'self' data: blob: https:; connect-src 'self' wss://pw.kevinalthaus.com https://api.github.com; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;
    
    # Request limits
    client_max_body_size 50M;
    client_body_buffer_size 1M;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    send_timeout 60s;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml text/x-js text/x-cross-domain-policy application/x-font-ttf application/x-font-opentype application/vnd.ms-fontobject font/opentype;
    
    # Logging
    access_log /var/log/nginx/pw.kevinalthaus.com.access.log combined buffer=32k flush=5s;
    error_log /var/log/nginx/pw.kevinalthaus.com.error.log warn;
    
    # Root location for frontend
    location / {
        # Rate limiting
        limit_req zone=staging_general burst=50 nodelay;
        limit_conn staging_conn 100;
        
        proxy_pass http://staging_frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # SPA fallback
        try_files $uri $uri/ /index.html;
    }
    
    # API endpoints
    location /api/ {
        # Stricter rate limiting for API
        limit_req zone=staging_api burst=10 nodelay;
        limit_conn staging_conn 50;
        
        proxy_pass http://staging_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        
        # Disable buffering for SSE
        proxy_buffering off;
        proxy_cache off;
        
        # CORS headers (handled by backend, but backup)
        add_header Access-Control-Allow-Origin "https://pw.kevinalthaus.com" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        # Handle OPTIONS
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Max-Age "3600";
            add_header Content-Type "text/plain; charset=utf-8";
            add_header Content-Length "0";
            return 204;
        }
    }
    
    # Authentication endpoints (strictest rate limiting)
    location /api/auth/ {
        limit_req zone=staging_auth burst=2 nodelay;
        limit_conn staging_conn 10;
        
        proxy_pass http://staging_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # No caching for auth
        proxy_cache off;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" always;
    }
    
    # WebSocket support
    location /ws/ {
        proxy_pass http://staging_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket timeouts
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }
    
    # Health check endpoint (no rate limiting)
    location /health {
        proxy_pass http://staging_backend/health;
        access_log off;
        
        # Cache health checks
        proxy_cache staging_cache;
        proxy_cache_valid 200 5s;
        proxy_cache_valid any 1s;
    }
    
    # Metrics endpoint (internal only)
    location /metrics {
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        proxy_pass http://staging_backend/metrics;
    }
    
    # Static assets with caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://staging_frontend;
        
        # Cache static assets
        proxy_cache staging_cache;
        proxy_cache_valid 200 1h;
        proxy_cache_valid 404 1m;
        proxy_cache_bypass $http_pragma $http_authorization;
        
        add_header Cache-Control "public, max-age=3600, immutable";
        add_header X-Cache-Status $upstream_cache_status;
        
        # Gzip static files
        gzip_static on;
    }
    
    # Playwright test report hosting
    location /test-reports/ {
        alias /var/www/pw.kevinalthaus.com/test-reports/;
        autoindex on;
        autoindex_exact_size off;
        autoindex_localtime on;
        
        # Basic auth for test reports
        auth_basic "Test Reports";
        auth_basic_user_file /etc/nginx/.htpasswd_staging;
        
        # Allow frames for test reports
        add_header X-Frame-Options "SAMEORIGIN" always;
    }
    
    # Block common exploits
    location ~* (\.php|\.aspx|\.asp|\.jsp|\.cgi|\.pl|\.py)$ {
        return 404;
    }
    
    # Block hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /var/www/pw.kevinalthaus.com/error_pages;
        internal;
    }
    
    location = /50x.html {
        root /var/www/pw.kevinalthaus.com/error_pages;
        internal;
    }
}

# Monitoring endpoint (separate port)
server {
    listen 127.0.0.1:8080;
    server_name _;
    
    location /nginx_status {
        stub_status;
        access_log off;
    }
    
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}